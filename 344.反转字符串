# 反转字符串
from functools import reduce


def revers_string(s):
    print(s[::-1])  # 表示从最后一个开始截取字符串，


revers_string('hello')


# 使用reduce
# reduce() 函数会对参数序列中元素进行累积。
# 函数将一个数据集合（链表，元组等）中的所有数据进行下列操作：
# 用传给reduce中的函数 function（有两个参数）先对集合中的第 1、2 个元素进行操作，
# 得到的结果再与第三个数据用 function 函数运算，最后得到一个结果。
print(reduce(lambda x, y: y+x, 'hello')) #  把前两个作为变量x,y y+x 即eh,然后这个作为x,l作为y,y+x 就变成leh 迭代出来就是olleh 妙呀


# 使用堆栈
def func(s):
    ss = list(s)
    result = ""
    while len(ss) > 0:
        result = result + ss.pop()  # 模拟出栈
    return result


print(func('hello'))


# 使用for循环
def funct(s):
    result = ""
    for i in s:
        result = i + result
    return result


print(funct('world'))
